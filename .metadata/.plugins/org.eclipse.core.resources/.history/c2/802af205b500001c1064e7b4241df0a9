package com.seleniun.framework.pages;

import static org.testng.Assert.assertNotNull;
import static org.testng.Assert.assertTrue;

import org.apache.log4j.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import com.selenium.framework.libraries.seleniumBase;
import com.selenium.framework.libraries.seleniumLibrary;


public class HP3CreateAccount extends seleniumBase {
	
	final static Logger logger = Logger.getLogger(HP3CreateAccount.class);
	seleniumLibrary library = new seleniumLibrary();
	
	
	public HP3CreateAccount() {
		logger.info("Step 7 : diverting to HTML 3 || building constructor & Waiting Visibilty HTML Page 3  " );		
		WebElement firstNameWebElement = library.dynamicWaitForVisibilityOfElement(By.cssSelector("#customer_firstname"));
		assertNotNull(firstNameWebElement,"First Name Field is not visible-creat account action is penidng");

	}
	
	public HP3CreateAccount specifygender () {
		logger.info("Step 8 : Specifying Gender.. " );		
		library.clickAnyLink(By.cssSelector("#id_gender1"));
		return this;
	}
	
	public HP3CreateAccount enteringUserDetails () {
		try {
		logger.info("Step 9 : Entering user details");
		library.entertext(By.cssSelector("#customer_firstname"), "Haytham");
		library.entertext(By.cssSelector("#customer_lastname"), "Hundy");
		library.entertext(By.cssSelector("#email"), "haytham.hundy@gmail.com");
		library.entertext(By.cssSelector("#passwd"), "haythamhenedy21@@");
		}catch (Exception e) {
			logger.error("Error: ", e );
			assertTrue(false); 
		    }
		return this;
		}
	
	public HP3CreateAccount dropDownStaticListDateBirth () {
		
	library.selectDropDown(By.id("uniform-days")).selectByIndex(0); 
	library.selectDropDown(By.cssSelector("#months")).selectByVisibleText("February ");
	library.selectDropDown(By.cssSelector("#years")).selectByVisibleText("2021  ");
    return this;
	}
	
	public HP3CreateAccount fillingAddressDetails () {
		try {
		logger.info("step 10: Entering Address Details");
		library.entertext(By.id("firstname"), "Haytham");
		library.entertext(By.id("#lastname"), "Hundy");
		library.entertext(By.cssSelector("#company"), "MADCOP");
		library.entertext(By.cssSelector("#address1"), "4607 ROYAL OAKS , MONMOUTH JNC");
		library.entertext(By.cssSelector("#city"), "Monmouth Junction");
		library.entertext(By.cssSelector("#postcode"), "08852");
		}catch (Exception e) {
		logger.error("Error: ", e );
		assertTrue(false); 
	    }
		return this;
	}
	public HP3CreateAccount dropDownStaticListStateAndCountry () {
		try {
		library.selectDropDown(By.cssSelector("#id_state")).selectByVisibleText("Arizona");
		library.selectDropDown(By.cssSelector("#id_country")).selectByVisibleText("United States");
		}catch (Exception e) {
			logger.error("Error: ", e );
			assertTrue(false); 
		    }
		return this;
		}
	
    public HP4MyAccount fillingFinalDetails () {
	
        try {
	    logger.info("step 11 : Filling Phone & backupaddress || divert to HTML Page 4");
	    library.entertext(By.cssSelector("#phone_mobile"), "8486679514");
		library.entertext(By.cssSelector("#alias"), "Georgia");
		library.clickAnyLink(By.cssSelector("body.authentication.hide-left-column.hide-right-column.lang_en:nth-child(4) div.columns-container div.container div.row:nth-child(3) div.center_column.col-xs-12.col-sm-12 div:nth-child(1) form.std.box div.submit.clearfix:nth-child(4) button.btn.btn-default.button.button-medium:nth-child(4) > span:nth-child(1)"));
		}catch (Exception e) {
			logger.error("Error: ", e );
			assertTrue(false); 
		    }
        return new HP4MyAccount();
		}
}
